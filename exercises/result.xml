<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./exercises</line>
</preamble>

<pid>13799</pid>
<ppid>5334</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=full</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=result.xml</arg>
  </vargv>
  <argv>
    <exe>./exercises</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.060 </time>
</status>


<status>
  <state>FINISHED</state>
  <time>00:00:00:02.064 </time>
</status>

<error>
  <unique>0x2</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are definitely lost in loss record 3 of 31</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42E2CA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeA_removeNthFromEnd_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeAVerifier.cpp</file>
      <line>221</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
    <frame>
      <ip>0x406312</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>RUN_ALL_TESTS()</fn>
      <dir>/usr/local/include/gtest</dir>
      <file>gtest.h</file>
      <line>2237</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are definitely lost in loss record 4 of 31</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42EEA2</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeA_mergeTwoLists_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeAVerifier.cpp</file>
      <line>262</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
    <frame>
      <ip>0x406312</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>RUN_ALL_TESTS()</fn>
      <dir>/usr/local/include/gtest</dir>
      <file>gtest.h</file>
      <line>2237</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are definitely lost in loss record 5 of 31</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42F8C5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeA_swapPairs_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeAVerifier.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
    <frame>
      <ip>0x406312</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>RUN_ALL_TESTS()</fn>
      <dir>/usr/local/include/gtest</dir>
      <file>gtest.h</file>
      <line>2237</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are definitely lost in loss record 6 of 31</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x426686</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>List::operator=(std::vector&lt;int, std::allocator&lt;int&gt; &gt;&amp;)</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeDataStructure.cpp</file>
      <line>94</line>
    </frame>
    <frame>
      <ip>0x4490AF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeB_rotateRight_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeBVerifier.cpp</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are definitely lost in loss record 7 of 31</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x426686</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>List::operator=(std::vector&lt;int, std::allocator&lt;int&gt; &gt;&amp;)</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeDataStructure.cpp</file>
      <line>94</line>
    </frame>
    <frame>
      <ip>0x449106</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeB_rotateRight_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeBVerifier.cpp</file>
      <line>54</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x8</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>32 (16 direct, 16 indirect) bytes in 1 blocks are definitely lost in loss record 9 of 31</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x426686</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>List::operator=(std::vector&lt;int, std::allocator&lt;int&gt; &gt;&amp;)</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeDataStructure.cpp</file>
      <line>94</line>
    </frame>
    <frame>
      <ip>0x4493C5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeB_rotateRight_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeBVerifier.cpp</file>
      <line>62</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x9</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>32 (16 direct, 16 indirect) bytes in 1 blocks are definitely lost in loss record 10 of 31</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x426686</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>List::operator=(std::vector&lt;int, std::allocator&lt;int&gt; &gt;&amp;)</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeDataStructure.cpp</file>
      <line>94</line>
    </frame>
    <frame>
      <ip>0x4493DE</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeB_rotateRight_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeBVerifier.cpp</file>
      <line>63</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xf</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>48 (16 direct, 32 indirect) bytes in 1 blocks are definitely lost in loss record 16 of 31</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43D1A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeA::addTwoNumbers(ListNode*, ListNode*)</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeA.cpp</file>
      <line>71</line>
    </frame>
    <frame>
      <ip>0x428F02</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeA_addTwoNumbers_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeAVerifier.cpp</file>
      <line>51</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x13</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>64 (16 direct, 48 indirect) bytes in 1 blocks are definitely lost in loss record 20 of 31</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x428DC2</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeA_addTwoNumbers_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeAVerifier.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
    <frame>
      <ip>0x406312</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>RUN_ALL_TESTS()</fn>
      <dir>/usr/local/include/gtest</dir>
      <file>gtest.h</file>
      <line>2237</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x14</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>64 (16 direct, 48 indirect) bytes in 1 blocks are definitely lost in loss record 21 of 31</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x428DE3</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeA_addTwoNumbers_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeAVerifier.cpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
    <frame>
      <ip>0x406312</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>RUN_ALL_TESTS()</fn>
      <dir>/usr/local/include/gtest</dir>
      <file>gtest.h</file>
      <line>2237</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x15</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>64 (16 direct, 48 indirect) bytes in 1 blocks are definitely lost in loss record 22 of 31</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42E320</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeA_removeNthFromEnd_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeAVerifier.cpp</file>
      <line>226</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
    <frame>
      <ip>0x406312</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>RUN_ALL_TESTS()</fn>
      <dir>/usr/local/include/gtest</dir>
      <file>gtest.h</file>
      <line>2237</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x18</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>80 (16 direct, 64 indirect) bytes in 1 blocks are definitely lost in loss record 25 of 31</text>
    <leakedbytes>80</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x421E14</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>NowCoder_printListFromTailToHead_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises</dir>
      <file>NowCoderVerifier.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
    <frame>
      <ip>0x406312</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>RUN_ALL_TESTS()</fn>
      <dir>/usr/local/include/gtest</dir>
      <file>gtest.h</file>
      <line>2237</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x19</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>80 (16 direct, 64 indirect) bytes in 1 blocks are definitely lost in loss record 26 of 31</text>
    <leakedbytes>80</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42F86F</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeA_swapPairs_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeAVerifier.cpp</file>
      <line>301</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
    <frame>
      <ip>0x406312</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>RUN_ALL_TESTS()</fn>
      <dir>/usr/local/include/gtest</dir>
      <file>gtest.h</file>
      <line>2237</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1a</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>80 (16 direct, 64 indirect) bytes in 1 blocks are definitely lost in loss record 27 of 31</text>
    <leakedbytes>80</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42FB8D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeA_reverseKGroup_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeAVerifier.cpp</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
    <frame>
      <ip>0x406312</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>RUN_ALL_TESTS()</fn>
      <dir>/usr/local/include/gtest</dir>
      <file>gtest.h</file>
      <line>2237</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1b</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>96 (16 direct, 80 indirect) bytes in 1 blocks are definitely lost in loss record 28 of 31</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4263DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>List::List(std::vector&lt;int, std::allocator&lt;int&gt; &gt;&amp;)</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeDataStructure.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x448ECB</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeB_rotateRight_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeBVerifier.cpp</file>
      <line>42</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>96 (16 direct, 80 indirect) bytes in 1 blocks are definitely lost in loss record 29 of 31</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4263DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>List::List(std::vector&lt;int, std::allocator&lt;int&gt; &gt;&amp;)</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeDataStructure.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x448F2D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeB_rotateRight_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeBVerifier.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1d</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>112 (16 direct, 96 indirect) bytes in 1 blocks are definitely lost in loss record 30 of 31</text>
    <leakedbytes>112</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42EE81</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>LeetCodeA_mergeTwoLists_Test::TestBody()</fn>
      <dir>/home/sheldon/workspace/mycode/exercises/LeetCode</dir>
      <file>LeetCodeAVerifier.cpp</file>
      <line>261</line>
    </frame>
    <frame>
      <ip>0x4795BA</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x47306E</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45680D</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::Test::Run()</fn>
    </frame>
    <frame>
      <ip>0x4571A5</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestInfo::Run()</fn>
    </frame>
    <frame>
      <ip>0x457898</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::TestCase::Run()</fn>
    </frame>
    <frame>
      <ip>0x45E9DF</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::internal::UnitTestImpl::RunAllTests()</fn>
    </frame>
    <frame>
      <ip>0x47AA62</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x473D6C</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)</fn>
    </frame>
    <frame>
      <ip>0x45D47B</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>testing::UnitTest::Run()</fn>
    </frame>
    <frame>
      <ip>0x406312</ip>
      <obj>/home/sheldon/workspace/mycode/exercises/exercises</obj>
      <fn>RUN_ALL_TESTS()</fn>
      <dir>/usr/local/include/gtest</dir>
      <file>gtest.h</file>
      <line>2237</line>
    </frame>
  </stack>
</error>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

